[{"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\index.js":"1","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\store.js":"2","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\App.js":"3","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\serviceWorker.js":"4","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\categoryReducers.js":"6","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\cartReducers.js":"7","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\orderReducers.js":"9","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Header.js":"11","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\HomeScreen.js":"12","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\AllProductsScreen.js":"13","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductScreen.js":"14","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\LoginScreen.js":"15","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\RegisterScreen.js":"16","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ShippingScreen.js":"18","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PaymentScreen.js":"19","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PlaceOrderScreen.js":"20","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderScreen.js":"21","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductListScreen.js":"22","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserListScreen.js":"24","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductEditScreen.js":"25","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryListScreen.js":"26","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CartScreen.js":"27","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PrivacyPolicyScreen.js":"28","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ReturnPolicyScreen.js":"29","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderListScreen.js":"30","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\TermsandConditionsScreen.js":"31","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ContactScreen.js":"32","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Product.js":"33","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Message.js":"34","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Loader.js":"35","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Meta.js":"36","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Rating.js":"37","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\FormContainer.js":"38","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Paginate.js":"39","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\categoryConstants.js":"40","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\productConstants.js":"41","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\cartConstants.js":"42","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\userConstants.js":"43","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\orderConstants.js":"44","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\DesktopHeader\\DesktopHeader.js":"45","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\MobileHeader\\MobileHeader.js":"46","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\mailAction.js":"47","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\productActions.js":"48","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\cartActions.js":"49","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\orderActions.js":"50","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\categoryActions.js":"51","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\userActions.js":"52","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\CheckoutSteps.js":"53","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\SearchBox.js":"54","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryEditScreen.js":"55","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ForgotPassword.js":"56"},{"size":608,"mtime":1624262234501,"results":"57","hashOfConfig":"58"},{"size":2979,"mtime":1624429825876,"results":"59","hashOfConfig":"58"},{"size":4010,"mtime":1624429978250,"results":"60","hashOfConfig":"58"},{"size":6207,"mtime":1624262234513,"results":"61","hashOfConfig":"58"},{"size":4185,"mtime":1624262234503,"results":"62","hashOfConfig":"58"},{"size":2914,"mtime":1624262234502,"results":"63","hashOfConfig":"58"},{"size":1385,"mtime":1624262234501,"results":"64","hashOfConfig":"58"},{"size":4509,"mtime":1624429754717,"results":"65","hashOfConfig":"58"},{"size":4212,"mtime":1624262234502,"results":"66","hashOfConfig":"58"},{"size":3190,"mtime":1624262234493,"results":"67","hashOfConfig":"58"},{"size":306,"mtime":1624262234494,"results":"68","hashOfConfig":"58"},{"size":10139,"mtime":1624441460875,"results":"69","hashOfConfig":"58"},{"size":1613,"mtime":1624262234504,"results":"70","hashOfConfig":"58"},{"size":16741,"mtime":1624441457476,"results":"71","hashOfConfig":"58"},{"size":3025,"mtime":1624429410009,"results":"72","hashOfConfig":"58"},{"size":3751,"mtime":1624262234510,"results":"73","hashOfConfig":"58"},{"size":6478,"mtime":1624262234510,"results":"74","hashOfConfig":"58"},{"size":2942,"mtime":1624262234511,"results":"75","hashOfConfig":"58"},{"size":2454,"mtime":1624262234507,"results":"76","hashOfConfig":"58"},{"size":8011,"mtime":1624262234508,"results":"77","hashOfConfig":"58"},{"size":11266,"mtime":1624262234507,"results":"78","hashOfConfig":"58"},{"size":5468,"mtime":1624262234509,"results":"79","hashOfConfig":"58"},{"size":4209,"mtime":1624262234512,"results":"80","hashOfConfig":"58"},{"size":3970,"mtime":1624262234512,"results":"81","hashOfConfig":"58"},{"size":12900,"mtime":1624262234509,"results":"82","hashOfConfig":"58"},{"size":4645,"mtime":1624262234505,"results":"83","hashOfConfig":"58"},{"size":4378,"mtime":1624262234504,"results":"84","hashOfConfig":"58"},{"size":6602,"mtime":1624262234508,"results":"85","hashOfConfig":"58"},{"size":2395,"mtime":1624262234511,"results":"86","hashOfConfig":"58"},{"size":3696,"mtime":1624262234507,"results":"87","hashOfConfig":"58"},{"size":11000,"mtime":1624262234512,"results":"88","hashOfConfig":"58"},{"size":2178,"mtime":1624262234505,"results":"89","hashOfConfig":"58"},{"size":1497,"mtime":1624429022648,"results":"90","hashOfConfig":"58"},{"size":295,"mtime":1624262234495,"results":"91","hashOfConfig":"58"},{"size":483,"mtime":1624262234495,"results":"92","hashOfConfig":"58"},{"size":536,"mtime":1624262234495,"results":"93","hashOfConfig":"58"},{"size":2393,"mtime":1624262234497,"results":"94","hashOfConfig":"58"},{"size":398,"mtime":1624262234494,"results":"95","hashOfConfig":"58"},{"size":977,"mtime":1624262234497,"results":"96","hashOfConfig":"58"},{"size":1086,"mtime":1624262234499,"results":"97","hashOfConfig":"58"},{"size":1524,"mtime":1624262234500,"results":"98","hashOfConfig":"58"},{"size":282,"mtime":1624262234498,"results":"99","hashOfConfig":"58"},{"size":1732,"mtime":1624429537036,"results":"100","hashOfConfig":"58"},{"size":1262,"mtime":1624262234499,"results":"101","hashOfConfig":"58"},{"size":6087,"mtime":1624262234493,"results":"102","hashOfConfig":"58"},{"size":5829,"mtime":1624262234496,"results":"103","hashOfConfig":"58"},{"size":159,"mtime":1624262234489,"results":"104","hashOfConfig":"58"},{"size":6611,"mtime":1624262234490,"results":"105","hashOfConfig":"58"},{"size":1361,"mtime":1624262234488,"results":"106","hashOfConfig":"58"},{"size":6758,"mtime":1624262234489,"results":"107","hashOfConfig":"58"},{"size":4846,"mtime":1624262234488,"results":"108","hashOfConfig":"58"},{"size":8191,"mtime":1624429671252,"results":"109","hashOfConfig":"58"},{"size":1649,"mtime":1624262234492,"results":"110","hashOfConfig":"58"},{"size":1298,"mtime":1624262234498,"results":"111","hashOfConfig":"58"},{"size":3864,"mtime":1624262234504,"results":"112","hashOfConfig":"58"},{"size":2257,"mtime":1624429915752,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"x4a9sa",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"116"},"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\index.js",[],["234","235"],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\store.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\App.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\HomeScreen.js",["236","237"],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\AllProductsScreen.js",["238"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst AllProducts = ({ match }) =>\r\n{\r\n    const keyword = match.params.keyword\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    useEffect(() =>\r\n    {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <Container>\r\n            <Meta />\r\n            <Link to='/' className='btn btn-light'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                        <>\r\n                            <Row>\r\n                                {products.map((product) => (\r\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                        <Product product={product} />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllProducts\r\n","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductScreen.js",["239","240","241","242"],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderScreen.js",["243","244","245"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport\r\n{\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions'\r\nimport\r\n{\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) =>\r\n{\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) =>\r\n        {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () =>\r\n        {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () =>\r\n            {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResult) =>\r\n    {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>\r\n    {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                    Cash On Delivery\r\n                  </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image[0]}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>₹{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>₹{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>₹{order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>₹{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {/*!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n                  )*/}\r\n                            {\r\n                                userInfo && !userInfo.isAdmin && (\r\n                                    <ListGroup.Item>\r\n                                        <Message> Your Order is Placed Successfully! You will get your Product very soon. </Message>\r\n                                    </ListGroup.Item>\r\n                                )\r\n                            }\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                //order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                    </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                !order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={successPaymentHandler}\r\n                                        >\r\n                                            Mark As Paid\r\n                                    </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            <ListGroup.Item>\r\n                                {\r\n                                    order.packing ?\r\n                                        <Message>Packing: Gift Wrap!</Message>\r\n                                        : <Message>Packing: Normal!</Message>\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductEditScreen.js",["246"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) =>\r\n{\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [mrp, setMrp] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [image2, setImage2] = useState('')\r\n    const [image3, setImage3] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [subCategory, setSubCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const categoryList = useSelector((state) => state.categoryList)\r\n    const { loading: categoryLoading, error: categoryError, categorys } = categoryList\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product || !product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setMrp(product.mrp)\r\n                setImage(product.image[0])\r\n                setImage2(product.image[1])\r\n                setImage3(product.image[2])\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setSubCategory(product.subCategory)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) =>\r\n    {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler2 = async (e) =>\r\n    {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage2(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler3 = async (e) =>\r\n    {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage3(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        //console.log(name, category)\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                mrp,\r\n                image: image2 ? image3 ? [image, image2, image3] : [image, image2] : [image],\r\n                brand,\r\n                category,\r\n                subCategory,\r\n                description,\r\n                countInStock,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='mrp'>\r\n                            <Form.Label>MRP</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter MRP'\r\n                                value={mrp}\r\n                                onChange={(e) => setMrp(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image2'>\r\n                            <Form.Label>Image2</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image2}\r\n                                onChange={(e) => setImage2(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler2}\r\n                            ></Form.File>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image3'>\r\n                            <Form.Label>Image3</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image3}\r\n                                onChange={(e) => setImage3(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler3}\r\n                            ></Form.File>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter countInStock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                as='select'\r\n                                value={category}\r\n                                //onChange={(e) => console.log(e.target.value)}\r\n                                onChange={(e) => setCategory(e.target.value)}>\r\n                                <option>Select Category</option>\r\n                                {!categoryLoading && !categoryError && (\r\n                                    categorys.map((category) => (\r\n                                        <option key={category._id}>{category.name}</option>\r\n                                    ))\r\n                                )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='subCategory'>\r\n                            <Form.Label>Sub Category</Form.Label>\r\n                            <Form.Control\r\n                                as='select'\r\n                                value={subCategory}\r\n                                onChange={(e) => setSubCategory(e.target.value)}>\r\n                                <option>Select Sub Category</option>\r\n                                {!categoryLoading && !categoryError && categorys.find(cat => cat.name === String(category)) && (\r\n                                    categorys.find(cat => cat.name === String(category)).subCategorys.map((sub) => (\r\n                                        <option key={sub}>{sub}</option>\r\n                                    ))\r\n                                )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n            </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PrivacyPolicyScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ReturnPolicyScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\TermsandConditionsScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ContactScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Product.js",["247"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Button, Image } from 'react-bootstrap'\r\n\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => \r\n{\r\n    return (\r\n        <Card className='my-3 py-3 px-1 rounded' style={{ overflow: 'hidden' }}>\r\n            <a href={`/product/${product._id}`}>\r\n                <Image style={{ display: 'block', width: '100%', height: 150 }} src={product.image[0]} variant='top' fluid />\r\n                <Card.Body>\r\n                    <Card.Title as='div'>\r\n                        <strong style={{ overflow: 'hidden', whiteSpace: 'nowrap', textOverflow: 'ellipsis' }}>{product.name}</strong>\r\n                    </Card.Title>\r\n                    <Card.Text as='div'>\r\n                        <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`} />\r\n                    </Card.Text>\r\n                    <div className='py-1' style={{ /*display: 'flex', flexDirection: 'row', alignContent: 'space-between' */ }}>\r\n                        <Card.Text as='h5' style={{ color: 'red' }}>MRP: <strike>₹{product.mrp}/-</strike> </Card.Text>\r\n                        <Card.Text as='h5'> ₹{product.price}</Card.Text>\r\n                    </div>\r\n                    <Button style={{ background: '#c60062' }} className=\"w-100\">View</Button>\r\n                </Card.Body>\r\n            </a>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\DesktopHeader\\DesktopHeader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\MobileHeader\\MobileHeader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\mailAction.js",["248"],"import axios from 'axios'\r\n\r\nexport default (obj) => async (dispatch, getState) =>\r\n{\r\n    console.log(obj)\r\n    await axios.post(`/api/contactmail`, obj)\r\n}\r\n","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\categoryActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryEditScreen.js",["249"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listCategoryDetails, updateCategory } from '../actions/categoryActions'\r\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoryConstants'\r\n\r\nconst CategoryEditScreen = ({ match, history }) =>\r\n{\r\n    const categoryId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [subCategorys, setSubCategorys] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const categoryDetails = useSelector((state) => state.categoryDetails)\r\n    const { loading, error, category } = categoryDetails\r\n\r\n    const categoryUpdate = useSelector((state) => state.categoryUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = categoryUpdate\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (successUpdate) {\r\n            dispatch({ type: CATEGORY_UPDATE_RESET })\r\n            history.push('/admin/categorylist')\r\n        } else {\r\n            if (!category || !category._id || category._id !== categoryId) {\r\n                dispatch(listCategoryDetails(categoryId))\r\n            } else {\r\n                setName(category.name)\r\n                setSubCategorys(category.subCategorys)\r\n            }\r\n        }\r\n    }, [dispatch, history, categoryId, category, successUpdate])\r\n\r\n    const submitHandler = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateCategory({\r\n                _id: categoryId,\r\n                name,\r\n                subCategorys: String(subCategorys).split(',')\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Link to='/admin/categorylist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>{category && category.name ? 'Edit' : 'Create'} Category</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='subCategorys'>\r\n                            <Form.Label>Sub Categories</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Subcategories seprated by commas'\r\n                                value={subCategorys}\r\n                                onChange={(e) => setSubCategorys(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            {category && category.name ? 'Update' : 'Create'}\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryEditScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ForgotPassword.js",["250","251","252"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { forgotPassword } from '../actions/userActions'\r\n\r\nconst ForgotPasswordScreen = ({ location, history }) =>\r\n{\r\n    const [email, setEmail] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userForgotPassword = useSelector((state) => state.userForgotPassword)\r\n    const { loading, error, success } = userForgotPassword\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n        if (success) {\r\n            history.push('/login')\r\n        }\r\n    }, [history, userInfo, redirect, success])\r\n\r\n    const submitHandler = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        dispatch(forgotPassword(email))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h2 className='py-3'>Forgot Password</h2>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <CircularProgress />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <p>We will send you a new Password on your Email Address. After login with new Password you can change your password.</p>\r\n                <Button type='submit' variant='primary'>\r\n                    Get New Password\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordScreen",{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":3,"column":10,"nodeType":"259","messageId":"260","endLine":3,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":25,"column":145,"nodeType":"263","messageId":"264","endLine":25,"endColumn":157},{"ruleId":"257","severity":1,"message":"265","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"266","line":5,"column":58,"nodeType":"259","messageId":"260","endLine":5,"endColumn":66},{"ruleId":"257","severity":1,"message":"267","line":5,"column":68,"nodeType":"259","messageId":"260","endLine":5,"endColumn":82},{"ruleId":"257","severity":1,"message":"268","line":5,"column":85,"nodeType":"259","messageId":"260","endLine":5,"endColumn":92},{"ruleId":"269","severity":1,"message":"270","line":52,"column":8,"nodeType":"271","endLine":52,"endColumn":60,"suggestions":"272"},{"ruleId":"257","severity":1,"message":"273","line":24,"column":12,"nodeType":"259","messageId":"260","endLine":24,"endColumn":20},{"ruleId":"257","severity":1,"message":"274","line":32,"column":22,"nodeType":"259","messageId":"260","endLine":32,"endColumn":32},{"ruleId":"269","severity":1,"message":"275","line":83,"column":8,"nodeType":"271","endLine":83,"endColumn":62,"suggestions":"276"},{"ruleId":"257","severity":1,"message":"277","line":27,"column":12,"nodeType":"259","messageId":"260","endLine":27,"endColumn":21},{"ruleId":"257","severity":1,"message":"278","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"279","severity":1,"message":"280","line":3,"column":1,"nodeType":"281","endLine":7,"endColumn":2},{"ruleId":"257","severity":1,"message":"282","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"278","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":14},{"ruleId":"257","severity":1,"message":"283","line":3,"column":24,"nodeType":"259","messageId":"260","endLine":3,"endColumn":27},{"ruleId":"257","severity":1,"message":"284","line":3,"column":29,"nodeType":"259","messageId":"260","endLine":3,"endColumn":32},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","'useState' is defined but never used.","'Carousel' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product.image'. Either include it or remove the dependency array.","ArrayExpression",["287"],"'sdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["288"],"'uploading' is assigned a value but never used.","'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [dispatch, match, successProductReview, product._id, product.image]",{"range":"293","text":"294"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"295","text":"296"},[1853,1905],"[dispatch, match, successProductReview, product._id, product.image]",[2587,2641],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]