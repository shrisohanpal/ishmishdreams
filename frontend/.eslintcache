[{"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\index.js":"1","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\store.js":"2","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\App.js":"3","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\serviceWorker.js":"4","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\categoryReducers.js":"6","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\cartReducers.js":"7","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\userReducers.js":"8","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\orderReducers.js":"9","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Footer.js":"10","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Header.js":"11","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\HomeScreen.js":"12","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\AllProductsScreen.js":"13","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductScreen.js":"14","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\LoginScreen.js":"15","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\RegisterScreen.js":"16","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProfileScreen.js":"17","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ShippingScreen.js":"18","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PaymentScreen.js":"19","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PlaceOrderScreen.js":"20","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderScreen.js":"21","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductListScreen.js":"22","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserEditScreen.js":"23","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserListScreen.js":"24","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductEditScreen.js":"25","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryListScreen.js":"26","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CartScreen.js":"27","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PrivacyPolicyScreen.js":"28","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ReturnPolicyScreen.js":"29","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderListScreen.js":"30","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\TermsandConditionsScreen.js":"31","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ContactScreen.js":"32","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Product.js":"33","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Message.js":"34","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Loader.js":"35","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Meta.js":"36","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Rating.js":"37","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\FormContainer.js":"38","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Paginate.js":"39","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\categoryConstants.js":"40","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\productConstants.js":"41","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\cartConstants.js":"42","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\userConstants.js":"43","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\orderConstants.js":"44","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\DesktopHeader\\DesktopHeader.js":"45","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\MobileHeader\\MobileHeader.js":"46","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\mailAction.js":"47","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\productActions.js":"48","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\cartActions.js":"49","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\orderActions.js":"50","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\categoryActions.js":"51","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\userActions.js":"52","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\CheckoutSteps.js":"53","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\SearchBox.js":"54","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryEditScreen.js":"55"},{"size":589,"mtime":1613292495753,"results":"56","hashOfConfig":"57"},{"size":2803,"mtime":1615357471536,"results":"58","hashOfConfig":"57"},{"size":3778,"mtime":1615357387077,"results":"59","hashOfConfig":"57"},{"size":6051,"mtime":1613292495785,"results":"60","hashOfConfig":"57"},{"size":4047,"mtime":1613292496663,"results":"61","hashOfConfig":"57"},{"size":2818,"mtime":1615357004370,"results":"62","hashOfConfig":"57"},{"size":1342,"mtime":1613292496574,"results":"63","hashOfConfig":"57"},{"size":3873,"mtime":1613292496689,"results":"64","hashOfConfig":"57"},{"size":4043,"mtime":1613292496634,"results":"65","hashOfConfig":"57"},{"size":3391,"mtime":1613292496060,"results":"66","hashOfConfig":"57"},{"size":290,"mtime":1613292496107,"results":"67","hashOfConfig":"57"},{"size":9958,"mtime":1613292496856,"results":"68","hashOfConfig":"57"},{"size":1564,"mtime":1613292496724,"results":"69","hashOfConfig":"57"},{"size":13182,"mtime":1615792119346,"results":"70","hashOfConfig":"57"},{"size":2423,"mtime":1613292496884,"results":"71","hashOfConfig":"57"},{"size":3651,"mtime":1613292497221,"results":"72","hashOfConfig":"57"},{"size":6328,"mtime":1613292497195,"results":"73","hashOfConfig":"57"},{"size":2860,"mtime":1615104084514,"results":"74","hashOfConfig":"57"},{"size":2381,"mtime":1613292497008,"results":"75","hashOfConfig":"57"},{"size":7826,"mtime":1615790759170,"results":"76","hashOfConfig":"57"},{"size":10997,"mtime":1615120223990,"results":"77","hashOfConfig":"57"},{"size":5325,"mtime":1613292497139,"results":"78","hashOfConfig":"57"},{"size":4099,"mtime":1613292497548,"results":"79","hashOfConfig":"57"},{"size":3877,"mtime":1613292497575,"results":"80","hashOfConfig":"57"},{"size":12424,"mtime":1615791224519,"results":"81","hashOfConfig":"57"},{"size":4513,"mtime":1615357176571,"results":"82","hashOfConfig":"57"},{"size":4272,"mtime":1613292496754,"results":"83","hashOfConfig":"57"},{"size":6534,"mtime":1613292497072,"results":"84","hashOfConfig":"57"},{"size":2363,"mtime":1613292497243,"results":"85","hashOfConfig":"57"},{"size":3612,"mtime":1613292496910,"results":"86","hashOfConfig":"57"},{"size":10948,"mtime":1613292497517,"results":"87","hashOfConfig":"57"},{"size":2124,"mtime":1613292496818,"results":"88","hashOfConfig":"57"},{"size":1468,"mtime":1615793721859,"results":"89","hashOfConfig":"57"},{"size":279,"mtime":1613292496153,"results":"90","hashOfConfig":"57"},{"size":461,"mtime":1613292496131,"results":"91","hashOfConfig":"57"},{"size":515,"mtime":1613292496177,"results":"92","hashOfConfig":"57"},{"size":2314,"mtime":1613292496247,"results":"93","hashOfConfig":"57"},{"size":381,"mtime":1613292496082,"results":"94","hashOfConfig":"57"},{"size":949,"mtime":1613292496203,"results":"95","hashOfConfig":"57"},{"size":1065,"mtime":1613292496449,"results":"96","hashOfConfig":"57"},{"size":1495,"mtime":1613292496505,"results":"97","hashOfConfig":"57"},{"size":278,"mtime":1613292496426,"results":"98","hashOfConfig":"57"},{"size":1475,"mtime":1613292496538,"results":"99","hashOfConfig":"57"},{"size":1236,"mtime":1613292496475,"results":"100","hashOfConfig":"57"},{"size":5983,"mtime":1615808821496,"results":"101","hashOfConfig":"57"},{"size":5716,"mtime":1615808850113,"results":"102","hashOfConfig":"57"},{"size":152,"mtime":1613292495924,"results":"103","hashOfConfig":"57"},{"size":6356,"mtime":1613292495980,"results":"104","hashOfConfig":"57"},{"size":1304,"mtime":1613292495849,"results":"105","hashOfConfig":"57"},{"size":6488,"mtime":1613292495952,"results":"106","hashOfConfig":"57"},{"size":4659,"mtime":1615359300127,"results":"107","hashOfConfig":"57"},{"size":7219,"mtime":1613292496005,"results":"108","hashOfConfig":"57"},{"size":1597,"mtime":1613292496036,"results":"109","hashOfConfig":"57"},{"size":1262,"mtime":1613292496273,"results":"110","hashOfConfig":"57"},{"size":3864,"mtime":1615359896873,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"fh5uo6",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\index.js",[],["229","230"],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\store.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\App.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\HomeScreen.js",["231","232"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container, Carousel, Col, Row } from 'react-bootstrap'\nimport { listProducts } from '../actions/productActions'\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\n\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst HomeScreen = () =>\n{\n    const dispatch = useDispatch()\n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products } = productList\n\n    useEffect(() =>\n    {\n        dispatch(listProducts(''))\n    }, [dispatch])\n    return (\n        <div style={{ width: '100%', padding: 0, height: 'auto', margin: 0, marginBottom: 0 }}>\n            <Carousel style={{ margin: 0, display: 'flex', justifyContent: 'center', width: '100%', alignItems: 'center', marginBottom: '10px', marginBottom: 0 }}>\n                <Carousel.Item>\n                    <div style={{ display: 'flex', justifyContent: 'center', width: '100%', height: window.innerWidth < 780 ? 150 : 300 }} >\n                        <img\n                            style={{ margin: 0, padding: 0, height: '100%', width: '100%', borderRadius: 0 }}\n                            src=\"/images/banners/banner1.jpg\"\n                            alt=\"First slide\"\n                        />\n                    </div>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <div style={{ display: 'flex', justifyContent: 'center', width: '100%', height: window.innerWidth < 780 ? 150 : 300 }} >\n                        <img\n                            style={{ margin: 0, padding: 0, height: '100%', width: '100%', borderRadius: 0 }}\n                            src=\"/images/banners/banner2.jpg\"\n                            alt=\"First slide\"\n                        />\n                    </div>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <div style={{ display: 'flex', justifyContent: 'center', width: '100%', height: window.innerWidth < 780 ? 150 : 300 }} >\n                        <img\n                            style={{ margin: 0, padding: 0, height: '100%', width: '100%', borderRadius: 0 }}\n                            src=\"/images/banners/banner3.jpg\"\n                            alt=\"First slide\"\n                        />\n                    </div>\n                </Carousel.Item>\n            </Carousel>\n\n            <Row style={{ margin: 0, padding: 0, backgroundColor: '#e6ffe6' }}>\n                <Col sm={12} lg={4}>\n                    <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/flower\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit1.jpg\" />\n                            </a>\n                            <a href=\"/search/god\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit2.jpg\" />\n                            </a>\n                        </div>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/wood\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit3.jpg\" />\n                            </a>\n                            <a href=\"/search/brass\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit4.jpg\" />\n                            </a>\n                        </div>\n                    </div>\n                </Col>\n\n                <Col sm={12} lg={4}>\n                    <a href=\"/search/deco\">\n                        <img alt=\"go\"\n                            style={{ maxHeight: '100%', maxWidth: '100%', paddingTop: '20px', paddingBottom: '20px' }}\n                            src=\"/images/banners/banner4.jpg\"\n                        />\n                    </a>\n                </Col>\n                <Col sm={12} lg={4}>\n                    <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/cloc\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit5.jpg\" />\n                            </a>\n                            <a href=\"/search/phot\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit6.jpg\" />\n                            </a>\n                        </div>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/ount\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit7.jpg\" />\n                            </a>\n                            <a href=\"/search/go\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit8.jpg\" />\n                            </a>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n\n\n            <h2 className='text-center'>Featured Products</h2>\n\n            {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : (<OwlCarousel items={window.innerWidth > 780 ? 4 : 2}\n                className=\"owl-theme\"\n                loop\n                nav\n                margin={8} autoplay={true} autoplayTimeout={2000}>\n                {products.map((product) => (\n                    <div key={product._id}>\n                        <Product product={product} />\n                    </div>\n\n                ))}\n            </OwlCarousel>\n            )\n            }\n\n\n            <Row style={{ margin: 0, padding: 0, backgroundColor: '#e6ffe6' }}>\n                <Col sm={12} lg={4}>\n                    <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/car\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit9.jpg\" />\n                            </a>\n                            <a href=\"/search/set\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit10.jpg\" />\n                            </a>\n                        </div>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/ol\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit11.jpg\" />\n                            </a>\n                            <a href=\"/search/eng\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit12.jpg\" />\n                            </a>\n                        </div>\n                    </div>\n                </Col>\n\n                <Col sm={12} lg={4}>\n                    <a href=\"/search/toy\">\n                        <img alt=\"go\"\n                            style={{ maxHeight: '100%', maxWidth: '100%', paddingTop: '20px', paddingBottom: '20px' }}\n                            src=\"/images/banners/banner5.jpg\"\n                        />\n                    </a>\n                </Col>\n                <Col sm={12} lg={4}>\n                    <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/bab\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit13.jpg\" />\n                            </a>\n                            <a href=\"/search/mo\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit14.jpg\" />\n                            </a>\n                        </div>\n                        <div style={{ flex: 0.5, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <a href=\"/search/do\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit15.jpg\" />\n                            </a>\n                            <a href=\"/search/un\">\n                                <img alt=\"go\" style={{ maxHeight: 300, maxWidth: 300, margin: '5%', width: '90%' }} src=\"/images/chits/chit16.jpg\" />\n                            </a>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default HomeScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\AllProductsScreen.js",["233"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst AllProducts = ({ match }) =>\n{\n    const keyword = match.params.keyword\n    const dispatch = useDispatch()\n\n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products } = productList\n\n    useEffect(() =>\n    {\n        dispatch(listProducts(keyword))\n    }, [dispatch, keyword])\n\n    return (\n        <Container>\n            <Meta />\n            <Link to='/' className='btn btn-light'>\n                Go Back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                        <>\n                            <Row>\n                                {products.map((product) => (\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                        <Product product={product} />\n                                    </Col>\n                                ))}\n                            </Row>\n                        </>\n                    )}\n        </Container>\n    )\n}\n\nexport default AllProducts\n","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderScreen.js",["234","235","236"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport\n{\n    getOrderDetails,\n    payOrder,\n    deliverOrder,\n} from '../actions/orderActions'\nimport\n{\n    ORDER_PAY_RESET,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) =>\n{\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector((state) => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector((state) => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!loading) {\n        //   Calculate prices\n        const addDecimals = (num) =>\n        {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n        )\n    }\n\n    useEffect(() =>\n    {\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        const addPayPalScript = async () =>\n        {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () =>\n            {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if (!order || successPay || successDeliver || order._id !== orderId) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, successPay, successDeliver, order])\n\n    const successPaymentHandler = (paymentResult) =>\n    {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () =>\n    {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <>\n            <h1>Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong> {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>{' '}\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            <p>\n                                <strong>Address:</strong>\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant='success'>\n                                    Delivered on {order.deliveredAt}\n                                </Message>\n                            ) : (\n                                <Message variant='danger'>Not Delivered</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                    Cash On Delivery\n                  </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image[0]}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ₹{item.price} = ₹{item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>₹{order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>₹{order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>₹{order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>₹{order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {/*!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n                  )*/}\n                            {\n                                userInfo && !userInfo.isAdmin && (\n                                    <ListGroup.Item>\n                                        <Message> Your Order is Placed Successfully! You will get your Product very soon. </Message>\n                                    </ListGroup.Item>\n                                )\n                            }\n                            {loadingDeliver && <Loader />}\n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                //order.isPaid &&\n                                !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                    </Button>\n                                    </ListGroup.Item>\n                                )}\n\n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                !order.isPaid && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={successPaymentHandler}\n                                        >\n                                            Mark As Paid\n                                    </Button>\n                                    </ListGroup.Item>\n                                )}\n                            <ListGroup.Item>\n                                {\n                                    order.packing ?\n                                        <Message>Packing: Gift Wrap!</Message>\n                                        : <Message>Packing: Normal!</Message>\n                                }\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default OrderScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ProductEditScreen.js",["237"],"import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) =>\n{\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [mrp, setMrp] = useState(0)\n    const [image, setImage] = useState('')\n    const [image2, setImage2] = useState('')\n    const [image3, setImage3] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [subCategory, setSubCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const categoryList = useSelector((state) => state.categoryList)\n    const { loading: categoryLoading, error: categoryError, categorys } = categoryList\n\n    const productUpdate = useSelector((state) => state.productUpdate)\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = productUpdate\n\n    useEffect(() =>\n    {\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product || !product.name || product._id !== productId) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setMrp(product.mrp)\n                setImage(product.image[0])\n                setImage2(product.image[1])\n                setImage3(product.image[2])\n                setBrand(product.brand)\n                setCategory(product.category)\n                setSubCategory(product.subCategory)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n            }\n        }\n    }, [dispatch, history, productId, product, successUpdate])\n\n    const uploadFileHandler = async (e) =>\n    {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage(data)\n            setUploading(false)\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    const uploadFileHandler2 = async (e) =>\n    {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage2(data)\n            setUploading(false)\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n    const uploadFileHandler3 = async (e) =>\n    {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config)\n\n            setImage3(data)\n            setUploading(false)\n        } catch (error) {\n            console.error(error)\n            setUploading(false)\n        }\n    }\n\n\n    const submitHandler = (e) =>\n    {\n        e.preventDefault()\n        //console.log(name, category)\n        dispatch(\n            updateProduct({\n                _id: productId,\n                name,\n                price,\n                mrp,\n                image: [image, image2, image3],\n                brand,\n                category,\n                subCategory,\n                description,\n                countInStock,\n            })\n        )\n    }\n\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\n                Go Back\n      </Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='price'>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter price'\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='mrp'>\n                            <Form.Label>MRP</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter MRP'\n                                value={mrp}\n                                onChange={(e) => setMrp(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter image url'\n                                value={image}\n                                onChange={(e) => setImage(e.target.value)}\n                            ></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler}\n                            ></Form.File>\n                        </Form.Group>\n\n                        <Form.Group controlId='image2'>\n                            <Form.Label>Image2</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter image url'\n                                value={image2}\n                                onChange={(e) => setImage2(e.target.value)}\n                            ></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler2}\n                            ></Form.File>\n                        </Form.Group>\n\n                        <Form.Group controlId='image3'>\n                            <Form.Label>Image3</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter image url'\n                                value={image3}\n                                onChange={(e) => setImage3(e.target.value)}\n                            ></Form.Control>\n                            <Form.File\n                                id='image-file'\n                                label='Choose File'\n                                custom\n                                onChange={uploadFileHandler3}\n                            ></Form.File>\n\n                        </Form.Group>\n\n                        <Form.Group controlId='brand'>\n                            <Form.Label>Brand</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter brand'\n                                value={brand}\n                                onChange={(e) => setBrand(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter countInStock'\n                                value={countInStock}\n                                onChange={(e) => setCountInStock(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='category'>\n                            <Form.Label>Category</Form.Label>\n                            <Form.Control\n                                as='select'\n                                value={category}\n                                //onChange={(e) => console.log(e.target.value)}\n                                onChange={(e) => setCategory(e.target.value)}\n                            >\n                                {!categoryLoading && !categoryError && (\n                                    categorys.map((category) => (\n                                        <option key={category._id}>{category.name}</option>\n                                    ))\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='subCategory'>\n                            <Form.Label>Sub Category</Form.Label>\n                            <Form.Control\n                                as='select'\n                                value={subCategory}\n                                onChange={(e) => setSubCategory(e.target.value)}>\n                                {!categoryLoading && !categoryError && categorys.find(cat => cat.name === String(category)) && (\n                                    categorys.find(cat => cat.name === String(category)).subCategorys.map((sub) => (\n                                        <option key={sub}>{sub}</option>\n                                    ))\n                                )}\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter description'\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n            </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\PrivacyPolicyScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ReturnPolicyScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\TermsandConditionsScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\ContactScreen.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\DesktopHeader\\DesktopHeader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\MobileHeader\\MobileHeader.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\mailAction.js",["238"],"import axios from 'axios'\n\nexport default (obj) => async (dispatch, getState) =>\n{\n    console.log(obj)\n    await axios.post(`/api/contactmail`, obj)\n}\n","C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\categoryActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Darshan\\Desktop\\ishmishdreams\\frontend\\src\\screens\\CategoryEditScreen.js",["239"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listCategoryDetails, updateCategory } from '../actions/categoryActions'\r\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoryConstants'\r\n\r\nconst CategoryEditScreen = ({ match, history }) =>\r\n{\r\n    const categoryId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [subCategorys, setSubCategorys] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const categoryDetails = useSelector((state) => state.categoryDetails)\r\n    const { loading, error, category } = categoryDetails\r\n\r\n    const categoryUpdate = useSelector((state) => state.categoryUpdate)\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = categoryUpdate\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (successUpdate) {\r\n            dispatch({ type: CATEGORY_UPDATE_RESET })\r\n            history.push('/admin/categorylist')\r\n        } else {\r\n            if (!category || !category._id || category._id !== categoryId) {\r\n                dispatch(listCategoryDetails(categoryId))\r\n            } else {\r\n                setName(category.name)\r\n                setSubCategorys(category.subCategorys)\r\n            }\r\n        }\r\n    }, [dispatch, history, categoryId, category, successUpdate])\r\n\r\n    const submitHandler = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateCategory({\r\n                _id: categoryId,\r\n                name,\r\n                subCategorys: String(subCategorys).split(',')\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Link to='/admin/categorylist' className='btn btn-light my-3'>\r\n                Go Back\r\n      </Link>\r\n            <FormContainer>\r\n                <h1>{category && category.name ? 'Edit' : 'Create'} Category</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='subCategorys'>\r\n                            <Form.Label>Sub Categories</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Subcategories seprated by commas'\r\n                                value={subCategorys}\r\n                                onChange={(e) => setSubCategorys(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            {category && category.name ? 'Update' : 'Create'}\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryEditScreen",{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":25,"column":145,"nodeType":"250","messageId":"251","endLine":25,"endColumn":157},{"ruleId":"244","severity":1,"message":"252","line":1,"column":28,"nodeType":"246","messageId":"247","endLine":1,"endColumn":36},{"ruleId":"244","severity":1,"message":"253","line":24,"column":12,"nodeType":"246","messageId":"247","endLine":24,"endColumn":20},{"ruleId":"244","severity":1,"message":"254","line":32,"column":22,"nodeType":"246","messageId":"247","endLine":32,"endColumn":32},{"ruleId":"255","severity":1,"message":"256","line":83,"column":8,"nodeType":"257","endLine":83,"endColumn":62,"suggestions":"258"},{"ruleId":"244","severity":1,"message":"259","line":27,"column":12,"nodeType":"246","messageId":"247","endLine":27,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":3,"column":1,"nodeType":"262","endLine":7,"endColumn":2},{"ruleId":"244","severity":1,"message":"263","line":1,"column":8,"nodeType":"246","messageId":"247","endLine":1,"endColumn":13},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","'useState' is defined but never used.","'sdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'uploading' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"269","text":"270"},[2505,2559],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]